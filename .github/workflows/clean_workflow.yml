name: Clean Workflow Runs

on:
  workflow_dispatch:
    inputs:
      clean_mode:
        description: "清理模式(amount--保留数量, date--保留天数)："
        required: true
        type: choice
        default: 'amount'
        options:
          - 'amount'
          - 'date'
      clean_to_keep:
        description: "保留最近工作流的天数/数量："
        required: true
        type: string
        default: "0"

jobs:
  clean-workflows:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read

    steps:
      - name: 安装GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y jq
          type -p gh >/dev/null || sudo apt install -y gh
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: 按保留数量清理工作流
        if: ${{ github.event.inputs.clean_mode == 'amount' }}
        run: |
          # 获取所有工作流（按创建时间倒序）
          all_runs=$(gh run list --json databaseId,createdAt,status --limit 1000)
          # 获取要保留的最新工作流ID
          keep_ids=$(echo "$all_runs" | jq -r 'sort_by(.createdAt) | reverse | .[0:'${{ github.event.inputs.clean_to_keep }}'] | .[].databaseId')
          # 删除不在保留列表中的工作流
          echo "$all_runs" | jq -r '.[] | select(.status != "in_progress" and .status != "queued") | .databaseId' | while read id; do
            if ! grep -qw "$id" <<< "$keep_ids"; then
              echo "删除工作流 $id..."
              gh run delete "$id" --confirm
            fi
          done


      - name: 按保留天数清理工作流
        if: ${{ github.event.inputs.clean_mode == 'date'}}
        run: |
          cutoff_date=$(date -d "${{ github.event.inputs.clean_to_keep }} days ago" +%Y-%m-%d)
          echo "删除 $cutoff_date 之前的所有工作流..."
          
          gh run list --json databaseId,createdAt,status --limit 1000 | jq -r --arg cutoff "$cutoff_date" '
            .[] | select(.status != "in_progress" and .status != "queued") | 
            select(.createdAt | split("T")[0] < $cutoff) | .databaseId
          ' | while read id; do
            gh run delete "$id" --confirm
          done
